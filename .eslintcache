[{"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\index.js":"1","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\App.js":"2","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\MaskSelector\\index.js":"3","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\ImageCropper\\imageCropper.js":"4","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\MaskSelector\\style.js":"5","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\ImageCropper\\imageCropperHelper.js":"6","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\CustomInput\\CustomInput.js":"7","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\CustomInput\\customInputStyle.js":"8","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\DebugToolbar\\index.js":"9","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\DebugToolbar\\style.js":"10","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\MaskSelector\\constants.js":"11","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\constants.js":"12","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\context.js":"13","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\Home\\HomeScreen.js":"14","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\Home\\HomeView\\index.js":"15","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\Home\\HomeView\\style.js":"16","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\MultiAnalysis\\MultiAnalysisScreen.js":"17","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\MultiAnalysis\\MultiAnalysisView\\index.js":"18","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\MultiAnalysis\\MultiAnalysisView\\style.js":"19","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\SingleAnalysis\\SingleAnalysisView\\index.js":"20","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\SingleAnalysis\\SingleAnalysisView\\style.js":"21"},{"size":905,"mtime":1632910360608,"results":"22","hashOfConfig":"23"},{"size":555,"mtime":1610601607380,"results":"24","hashOfConfig":"23"},{"size":12094,"mtime":1624588899049,"results":"25","hashOfConfig":"23"},{"size":2598,"mtime":1615075799191,"results":"26","hashOfConfig":"23"},{"size":546,"mtime":1621694600553,"results":"27","hashOfConfig":"23"},{"size":2397,"mtime":1615075793867,"results":"28","hashOfConfig":"23"},{"size":2417,"mtime":1610603118085,"results":"29","hashOfConfig":"23"},{"size":1867,"mtime":1610603283550,"results":"30","hashOfConfig":"23"},{"size":1651,"mtime":1617500171951,"results":"31","hashOfConfig":"23"},{"size":488,"mtime":1615092640698,"results":"32","hashOfConfig":"23"},{"size":932,"mtime":1615083272156,"results":"33","hashOfConfig":"23"},{"size":190,"mtime":1632907382700,"results":"34","hashOfConfig":"23"},{"size":1619,"mtime":1623039342752,"results":"35","hashOfConfig":"23"},{"size":1105,"mtime":1632910095110,"results":"36","hashOfConfig":"23"},{"size":8660,"mtime":1632910224074,"results":"37","hashOfConfig":"23"},{"size":2026,"mtime":1632908473115,"results":"38","hashOfConfig":"23"},{"size":6351,"mtime":1632908269751,"results":"39","hashOfConfig":"23"},{"size":6494,"mtime":1632908470177,"results":"40","hashOfConfig":"23"},{"size":2062,"mtime":1632908471377,"results":"41","hashOfConfig":"23"},{"size":10256,"mtime":1632910453873,"results":"42","hashOfConfig":"23"},{"size":1932,"mtime":1632910353234,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jxf2gb",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\index.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\App.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\MaskSelector\\index.js",["91","92","93"],"import React, { useContext, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport style from \"./style.js\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport maskAImg from \"../../assets/maskAImg.JPG\"\r\nimport maskBImg from \"../../assets/maskBImg.JPG\"\r\nimport maskCImg from \"../../assets/maskCImg.JPG\"\r\nimport maskDImg from \"../../assets/maskDImg.JPG\"\r\nimport maskEImg from \"../../assets/maskEImg.JPG\"\r\n\r\nimport { maskConstants } from \"./constants.js\"\r\n\r\nimport { Context } from \"../context\";\r\n\r\nconst useStyles = makeStyles(style);\r\n\r\nfunction MaskSelector(props) {\r\n  \r\n  const { lowerMaskOne, setLowerMaskOne, lowerMaskTwo, setLowerMaskTwo, upperMaskOne, setUpperMaskOne, upperMaskTwo, setUpperMaskTwo, setMask, isManualMask, setIsManualMask } = React.useContext(Context)\r\n  \r\n  const classes = useStyles();\r\n  const placeholder = \"hue, sat, val\";\r\n\r\n  const modifyLowerSat = (val) => {\r\n    let newLowerMaskOne = [...lowerMaskOne];\r\n    let newLowerMaskTwo = [...lowerMaskTwo];\r\n    newLowerMaskOne[1] += val;\r\n    newLowerMaskTwo[1] += val;    \r\n\r\n    if (newLowerMaskOne[1] > 255){\r\n        newLowerMaskOne[1] = 255;\r\n    }\r\n    if (newLowerMaskTwo[1] > 255){\r\n        newLowerMaskTwo[1] = 255;\r\n    }\r\n    if (newLowerMaskOne[1] > upperMaskOne[1] || newLowerMaskTwo[1] > upperMaskTwo[1]){\r\n        alert(\"Cannot increase lower sat above upper sat\")\r\n    }\r\n    else{\r\n      setLowerMaskOne(newLowerMaskOne)\r\n      setLowerMaskTwo(newLowerMaskTwo)\r\n    }\r\n  }\r\n  const modifyUpperSat = (val) => {\r\n    let newUpperMaskOne = [...upperMaskOne];\r\n    let newUpperMaskTwo = [...upperMaskTwo];\r\n    newUpperMaskOne[1] += val;    \r\n    newUpperMaskTwo[1] += val;\r\n\r\n    if (newUpperMaskOne[1] > 255){\r\n        newUpperMaskOne[1] = 255;\r\n    }\r\n    if (newUpperMaskTwo[1] > 255){\r\n        newUpperMaskTwo[1] = 255;\r\n    }\r\n    if (newUpperMaskOne[1] < lowerMaskOne[1] || newUpperMaskTwo[1] < lowerMaskTwo[1]){\r\n        alert(\"Cannot lower upper sat below lower sat\")\r\n    }\r\n    else{\r\n      setUpperMaskOne(newUpperMaskOne)\r\n      setUpperMaskTwo(newUpperMaskTwo)\r\n    }\r\n  }\r\n\r\n  const modifyLowerVal = (val) => {\r\n    let newLowerMaskOne = [...lowerMaskOne];\r\n    let newLowerMaskTwo = [...lowerMaskTwo];\r\n    newLowerMaskOne[2] += val;\r\n    newLowerMaskTwo[2] += val;    \r\n\r\n    if (newLowerMaskOne[2] > 255){\r\n        newLowerMaskOne[2] = 255;\r\n    }\r\n    if (newLowerMaskTwo[2] > 255){\r\n        newLowerMaskTwo[2] = 255;\r\n    }\r\n    if (newLowerMaskOne[2] > upperMaskOne[2] || newLowerMaskTwo[2] > upperMaskTwo[2]){\r\n        alert(\"Cannot increase lower val above upper val\")\r\n    }\r\n    else{\r\n      setLowerMaskOne(newLowerMaskOne)\r\n      setLowerMaskTwo(newLowerMaskTwo)\r\n    }\r\n  }\r\n  const modifyUpperVal = (val) => {\r\n    let newUpperMaskOne = [...upperMaskOne];\r\n    let newUpperMaskTwo = [...upperMaskTwo];\r\n    newUpperMaskOne[2] += val;    \r\n    newUpperMaskTwo[2] += val;\r\n\r\n    if (newUpperMaskOne[2] > 255){\r\n        newUpperMaskOne[2] = 255;\r\n    }\r\n    if (newUpperMaskTwo[2] > 255){\r\n        newUpperMaskTwo[2] = 255;\r\n    }\r\n    if (newUpperMaskOne[2] < lowerMaskOne[2] || newUpperMaskTwo[2] < lowerMaskTwo[2]){\r\n        alert(\"Cannot lower upper val below lower val\")\r\n    }\r\n    else{\r\n      setUpperMaskOne(newUpperMaskOne)\r\n      setUpperMaskTwo(newUpperMaskTwo)\r\n    }\r\n  }\r\n\r\n  const modifyHueRange = (val) => {    \r\n      let newLowerMaskTwo = [...lowerMaskTwo];\r\n      let newUpperMaskOne = [...upperMaskOne];\r\n      \r\n      newLowerMaskTwo[0] -= val;    \r\n      newUpperMaskOne[0] += val;    \r\n\r\n      if (newLowerMaskTwo[0] < 0){\r\n          newLowerMaskTwo[0] = 0;\r\n      }\r\n      if (newUpperMaskOne[0] > 180){\r\n          newUpperMaskOne[0] = 180;\r\n      }\r\n\r\n      setLowerMaskTwo(newLowerMaskTwo)\r\n      setUpperMaskOne(newUpperMaskOne)\r\n  }\r\n\r\n  const handleLowerMaskOneChange = (event) => {\r\n    setLowerMaskOne(event.target.value)\r\n  };\r\n\r\n  const handleLowerMaskTwoChange = (event) => {\r\n    setLowerMaskTwo(event.target.value)\r\n  };\r\n\r\n  const handleUpperMaskOneChange = (event) => {\r\n    setUpperMaskOne(event.target.value)\r\n  };\r\n\r\n  const handleUpperMaskTwoChange = (event) => {\r\n    setUpperMaskTwo(event.target.value)\r\n  };\r\n\r\n  return (\r\n    <div className={classes.column}>\r\n      <div style={{\"height\":20}}/>\r\n      <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setIsManualMask(!isManualMask)}\r\n          >\r\n          Change mask type\r\n      </Button>\r\n      { isManualMask ?\r\n        <div>\r\n          <h4>Selecting mask manually</h4>\r\n          <div className={classes.row}>\r\n            <div className={classes.column}>\r\n              <div className={classes.row}>\r\n                <TextField\r\n                  label=\"HSV Lower Range 1\"\r\n                  className={classes.textField}\r\n                  value={lowerMaskOne}\r\n                  placeholder={placeholder}\r\n                  onChange={handleLowerMaskOneChange}\r\n                  margin=\"normal\"\r\n                />\r\n                <TextField\r\n                  label=\"HSV Lower Range 2\"\r\n                  className={classes.textField}\r\n                  value={lowerMaskTwo}\r\n                  placeholder={placeholder}\r\n                  onChange={handleLowerMaskTwoChange}\r\n                  margin=\"normal\"\r\n                />\r\n              </div>\r\n              <div className={classes.row}>\r\n                <TextField\r\n                  label=\"HSV Upper Range 1\"\r\n                  className={classes.textField}\r\n                  value={upperMaskOne}\r\n                  placeholder={placeholder}\r\n                  onChange={handleUpperMaskOneChange}\r\n                  margin=\"normal\"\r\n                />\r\n                <TextField\r\n                  label=\"HSV Upper Range 2\"\r\n                  className={classes.textField}\r\n                  value={upperMaskTwo}\r\n                  placeholder={placeholder}\r\n                  onChange={handleUpperMaskTwoChange}\r\n                  margin=\"normal\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className={classes.column}>\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => setMask(maskConstants[\"A\"])}\r\n                >\r\n                  Select Lightest Mask\r\n              </Button>\r\n              Best for:\r\n              <img\r\n                src={maskAImg}\r\n                className={classes.exampleImage}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className={classes.column}>\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => setMask(maskConstants[\"B\"])}\r\n                >\r\n                  Select Light Mask\r\n              </Button>\r\n              Best for:\r\n              <img\r\n                src={maskBImg}\r\n                className={classes.exampleImage}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className={classes.column}>\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => setMask(maskConstants[\"C\"])}\r\n                >\r\n                  Select Standard Mask\r\n              </Button>\r\n              Best for:\r\n              <img\r\n                src={maskCImg}\r\n                className={classes.exampleImage}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className={classes.column}>\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => setMask(maskConstants[\"D\"])}\r\n                >\r\n                  Select Darker Mask\r\n              </Button>\r\n              Best for:\r\n              <img\r\n                src={maskDImg}\r\n                className={classes.exampleImage}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className={classes.column}>\r\n              <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => setMask(maskConstants[\"E\"])}\r\n                >\r\n                  Select Darkest Mask\r\n              </Button>\r\n              Best for:\r\n              <img\r\n                src={maskEImg}\r\n                className={classes.exampleImage}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div style={{\"height\": 10}}/>\r\n          <div className={classes.row}>\r\n              <div className={classes.column}>\r\n                  <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{\"backgroundColor\": \"maroon\"}}\r\n                  onClick={()=>modifyLowerSat(5)}\r\n                  className={classes.hsvButton}\r\n                  >\r\n                  Look for redder wounds (+sat)\r\n                  </Button>\r\n                  <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{\"backgroundColor\": \"pink\"}}\r\n                  onClick={()=>modifyLowerSat(-5)}\r\n                  className={classes.hsvButton}\r\n                  >\r\n                  Look for pinker wounds (-sat)\r\n                  </Button>\r\n              </div>\r\n              <div className={classes.column}>\r\n                  <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{\"backgroundColor\": \"#800200\"}}\r\n                  onClick={()=>modifyLowerVal(5)}\r\n                  className={classes.hsvButton}\r\n                  >\r\n                  Look for brighter wounds (+val)\r\n                  </Button>\r\n                  <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{\"backgroundColor\": \"black\"}}\r\n                  onClick={()=>modifyLowerVal(-5)}\r\n                  className={classes.hsvButton}\r\n                  >\r\n                  Look for darker wounds (-val)\r\n                  </Button>\r\n              </div>\r\n              <div className={classes.column}>\r\n                  <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      style={{\"backgroundColor\": \"green\"}}\r\n                      onClick={()=>modifyUpperVal(5)}\r\n                      className={classes.hsvButton}\r\n                  >\r\n                      Include more skin (+upperVal)\r\n                  </Button>\r\n                  <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      style={{\"backgroundColor\": \"green\"}}\r\n                      onClick={()=>modifyUpperVal(-5)}\r\n                      className={classes.hsvButton}\r\n                  >\r\n                      Include less skin (-upperVal)\r\n                  </Button>\r\n              </div>\r\n              <div className={classes.column}>\r\n                  <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      style={{\"backgroundColor\": \"green\"}}\r\n                      onClick={()=>modifyHueRange(5)}\r\n                      className={classes.hsvButton}\r\n                  >\r\n                      Include more wound colors (+hue range)\r\n                  </Button>\r\n                  <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      style={{\"backgroundColor\": \"green\"}}\r\n                      onClick={()=>modifyHueRange(-5)}\r\n                      className={classes.hsvButton}\r\n                  >\r\n                      Reduce range of possible colors (-hue range)\r\n                  </Button>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        :\r\n        <h4>Selecting mask automatically</h4>\r\n      }      \r\n      <div style={{\"height\":20}}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MaskSelector;\r\n",["94","95"],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\ImageCropper\\imageCropper.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\MaskSelector\\style.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\ImageCropper\\imageCropperHelper.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\CustomInput\\CustomInput.js",[],["96","97"],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\CustomInput\\customInputStyle.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\DebugToolbar\\index.js",["98","99"],"import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport style from \"./style.js\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {base_url} from \"../../constants.js\"\r\nconst useStyles = makeStyles(style);\r\n\r\n\r\n\r\nfunction DebugToolbar(props) {\r\n  const classes = useStyles();\r\n  const placeholder = \"hue, sat, val\";\r\n  return (\r\n    <div className={classes.column}>    \r\n      Debugging Toolbar:  \r\n      <div className={classes.column}>\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              const url = base_url + \"/testImage\";\r\n              //const url = \"/testImage\"\r\n              const form = new FormData();\r\n              form.append(\"file\", props.originalImage);\r\n              const analyze_options = {\r\n                method: \"POST\",\r\n                body: form,\r\n              };\r\n              fetch(url, analyze_options)\r\n                .then((response) => {\r\n                  if (!response.ok) throw Error(response.statusText);\r\n                  return response.json();\r\n                })\r\n                .then((image => {\r\n                  props.changeTestImage(image)\r\n                }))\r\n                .catch((error) => console.log(error)); \r\n            }}\r\n          >\r\n            Test Sending/Retrieving Image from API\r\n        </Button>\r\n        <img\r\n          src={\"data:image/png;base64,\" + props.testImage}\r\n          className={classes.exampleImage}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DebugToolbar;\r\n","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\DebugToolbar\\style.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\MaskSelector\\constants.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\constants.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\context.js",["100"],"import React, { useState } from \"react\"\r\nimport { maskConstants } from \"./MaskSelector/constants.js\"\r\n\r\nconst Context = React.createContext()\r\n\r\nfunction Provider(props) {\r\n    const [lowerMaskOne, setLowerMaskOne] = useState(maskConstants[\"B\"][\"lower_range\"][0])\r\n    const [lowerMaskTwo, setLowerMaskTwo] = useState(maskConstants[\"B\"][\"lower_range\"][1])\r\n    const [upperMaskOne, setUpperMaskOne] = useState(maskConstants[\"B\"][\"upper_range\"][0])\r\n    const [upperMaskTwo, setUpperMaskTwo] = useState(maskConstants[\"B\"][\"upper_range\"][1])\r\n    const [isManualMask, setIsManualMask] = useState(false);\r\n    const [zipImgList, setZipImgList] = useState([]);\r\n\r\n    const setMask = async (mask) => {\r\n        setLowerMaskOne(mask[\"lower_range\"][0])\r\n        setLowerMaskTwo(mask[\"lower_range\"][1])\r\n        setUpperMaskOne(mask[\"upper_range\"][0])\r\n        setUpperMaskTwo(mask[\"upper_range\"][1])\r\n    };\r\n\r\n    return (\r\n        <Context.Provider value={{ \r\n            lowerMaskOne: lowerMaskOne,\r\n            setLowerMaskOne: setLowerMaskOne,\r\n            lowerMaskTwo: lowerMaskTwo,\r\n            setLowerMaskTwo: setLowerMaskTwo,\r\n            upperMaskOne: upperMaskOne,\r\n            setUpperMaskOne: setUpperMaskOne,\r\n            upperMaskTwo: upperMaskTwo,\r\n            setUpperMaskTwo: setUpperMaskTwo,\r\n            zipImgList: zipImgList,\r\n            setZipImgList: setZipImgList,\r\n            setMask: setMask,\r\n            isManualMask: isManualMask,\r\n            setIsManualMask, setIsManualMask,\r\n        }}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport { Context, Provider }","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\Home\\HomeScreen.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\Home\\HomeView\\index.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\Home\\HomeView\\style.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\MultiAnalysis\\MultiAnalysisScreen.js",["101","102","103","104","105","106"],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\MultiAnalysis\\MultiAnalysisView\\index.js",["107","108","109","110","111"],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\MultiAnalysis\\MultiAnalysisView\\style.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\SingleAnalysis\\SingleAnalysisView\\index.js",["112","113","114","115","116","117","118","119","120","121","122"],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\SingleAnalysis\\SingleAnalysisView\\style.js",[],{"ruleId":"123","severity":1,"message":"124","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":27},{"ruleId":"123","severity":1,"message":"127","line":1,"column":29,"nodeType":"125","messageId":"126","endLine":1,"endColumn":37},{"ruleId":"123","severity":1,"message":"128","line":46,"column":9,"nodeType":"125","messageId":"126","endLine":46,"endColumn":23},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"129","replacedBy":"133"},{"ruleId":"131","replacedBy":"134"},{"ruleId":"123","severity":1,"message":"135","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":17},{"ruleId":"123","severity":1,"message":"136","line":13,"column":9,"nodeType":"125","messageId":"126","endLine":13,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":35,"column":30,"nodeType":"139","messageId":"140","endLine":35,"endColumn":45},{"ruleId":"123","severity":1,"message":"124","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":27},{"ruleId":"123","severity":1,"message":"141","line":3,"column":18,"nodeType":"125","messageId":"126","endLine":3,"endColumn":26},{"ruleId":"123","severity":1,"message":"142","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":14},{"ruleId":"123","severity":1,"message":"143","line":9,"column":10,"nodeType":"125","messageId":"126","endLine":9,"endColumn":23},{"ruleId":"123","severity":1,"message":"144","line":23,"column":5,"nodeType":"125","messageId":"126","endLine":23,"endColumn":20},{"ruleId":"123","severity":1,"message":"145","line":26,"column":23,"nodeType":"125","messageId":"126","endLine":26,"endColumn":37},{"ruleId":"123","severity":1,"message":"124","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":27},{"ruleId":"123","severity":1,"message":"141","line":3,"column":18,"nodeType":"125","messageId":"126","endLine":3,"endColumn":26},{"ruleId":"123","severity":1,"message":"143","line":11,"column":10,"nodeType":"125","messageId":"126","endLine":11,"endColumn":23},{"ruleId":"123","severity":1,"message":"144","line":25,"column":5,"nodeType":"125","messageId":"126","endLine":25,"endColumn":20},{"ruleId":"123","severity":1,"message":"145","line":28,"column":23,"nodeType":"125","messageId":"126","endLine":28,"endColumn":37},{"ruleId":"123","severity":1,"message":"146","line":11,"column":8,"nodeType":"125","messageId":"126","endLine":11,"endColumn":20},{"ruleId":"123","severity":1,"message":"143","line":13,"column":10,"nodeType":"125","messageId":"126","endLine":13,"endColumn":23},{"ruleId":"123","severity":1,"message":"147","line":29,"column":5,"nodeType":"125","messageId":"126","endLine":29,"endColumn":12},{"ruleId":"123","severity":1,"message":"148","line":38,"column":10,"nodeType":"125","messageId":"126","endLine":38,"endColumn":20},{"ruleId":"123","severity":1,"message":"149","line":39,"column":10,"nodeType":"125","messageId":"126","endLine":39,"endColumn":18},{"ruleId":"123","severity":1,"message":"150","line":43,"column":10,"nodeType":"125","messageId":"126","endLine":43,"endColumn":19},{"ruleId":"123","severity":1,"message":"151","line":44,"column":10,"nodeType":"125","messageId":"126","endLine":44,"endColumn":13},{"ruleId":"123","severity":1,"message":"152","line":44,"column":15,"nodeType":"125","messageId":"126","endLine":44,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":48,"column":3,"nodeType":"125","endLine":48,"endColumn":12,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":158,"column":37,"nodeType":"158","messageId":"140","endLine":158,"endColumn":39},{"ruleId":"123","severity":1,"message":"159","line":188,"column":9,"nodeType":"125","messageId":"126","endLine":188,"endColumn":30},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'modifyUpperSat' is assigned a value but never used.","no-native-reassign",["160"],"no-negated-in-lhs",["161"],["160"],["161"],"'TextField' is defined but never used.","'placeholder' is assigned a value but never used.","no-dupe-keys","Duplicate key 'setIsManualMask'.","ObjectExpression","unexpected","'Checkbox' is defined but never used.","'styles' is defined but never used.","'maskConstants' is defined but never used.","'setIsManualMask' is assigned a value but never used.","'setManualWidth' is assigned a value but never used.","'DebugToolbar' is defined but never used.","'setMask' is assigned a value but never used.","'edgedImage' is assigned a value but never used.","'analyzed' is assigned a value but never used.","'testImage' is assigned a value but never used.","'obj' is assigned a value but never used.","'setObj' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setOriginalImage'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.location.state, setZipImgList] as a second argument to the useEffect Hook.",["162"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'handleChangeTestImage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},"Add dependencies array: [props.location.state, setZipImgList]",{"range":"165","text":"166"},[2123,2123],", [props.location.state, setZipImgList]"]