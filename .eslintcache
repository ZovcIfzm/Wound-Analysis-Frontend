[{"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\index.js":"1","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\App.js":"2","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\CustomInput\\CustomInput.js":"3","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\CustomInput\\customInputStyle.js":"4","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\DebugToolbar\\index.js":"5","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\DebugToolbar\\style.js":"6","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\constants.js":"7","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\screens\\MultiAnalysisScreen.js":"8","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\analysisContext.js":"9","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\screens\\SingleAnalysisScreen.js":"10","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\views\\SingleAnalysisView\\index.js":"11","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\views\\MultiAnalysisView\\index.js":"12","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\views\\MultiAnalysisView\\style.js":"13","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\views\\SingleAnalysisView\\style.js":"14","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\components\\MaskSelector\\index.js":"15","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\components\\MaskSelector\\style.js":"16","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\components\\ImageCropper\\imageCropper.js":"17","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\components\\ImageCropper\\imageCropperHelper.js":"18","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\home\\screens\\HomeScreen.js":"19","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\home\\views\\HomeView\\index.js":"20","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\home\\views\\HomeView\\style.js":"21"},{"size":973,"mtime":1635636992859,"results":"22","hashOfConfig":"23"},{"size":555,"mtime":1610601607380,"results":"24","hashOfConfig":"23"},{"size":2417,"mtime":1610603118085,"results":"25","hashOfConfig":"23"},{"size":1867,"mtime":1610603283550,"results":"26","hashOfConfig":"23"},{"size":1651,"mtime":1617500171951,"results":"27","hashOfConfig":"23"},{"size":488,"mtime":1615092640698,"results":"28","hashOfConfig":"23"},{"size":999,"mtime":1635645835967,"results":"29","hashOfConfig":"23"},{"size":2411,"mtime":1635645036570,"results":"30","hashOfConfig":"23"},{"size":2870,"mtime":1635646253385,"results":"31","hashOfConfig":"23"},{"size":936,"mtime":1635646277075,"results":"32","hashOfConfig":"23"},{"size":6039,"mtime":1635646341871,"results":"33","hashOfConfig":"23"},{"size":3647,"mtime":1635645084753,"results":"34","hashOfConfig":"23"},{"size":2062,"mtime":1635632819933,"results":"35","hashOfConfig":"23"},{"size":1932,"mtime":1635632819967,"results":"36","hashOfConfig":"23"},{"size":11629,"mtime":1635645599987,"results":"37","hashOfConfig":"23"},{"size":546,"mtime":1635632819840,"results":"38","hashOfConfig":"23"},{"size":2598,"mtime":1635632819727,"results":"39","hashOfConfig":"23"},{"size":2397,"mtime":1635632819770,"results":"40","hashOfConfig":"23"},{"size":1115,"mtime":1635632820003,"results":"41","hashOfConfig":"23"},{"size":8627,"mtime":1635637105167,"results":"42","hashOfConfig":"23"},{"size":2026,"mtime":1635632820007,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jxf2gb",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":12,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":4,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":5,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":1,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\index.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\App.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\CustomInput\\CustomInput.js",[],["93","94"],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\CustomInput\\customInputStyle.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\DebugToolbar\\index.js",["95","96"],"import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport style from \"./style.js\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {base_url} from \"../../constants.js\"\r\nconst useStyles = makeStyles(style);\r\n\r\n\r\n\r\nfunction DebugToolbar(props) {\r\n  const classes = useStyles();\r\n  const placeholder = \"hue, sat, val\";\r\n  return (\r\n    <div className={classes.column}>    \r\n      Debugging Toolbar:  \r\n      <div className={classes.column}>\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              const url = base_url + \"/testImage\";\r\n              //const url = \"/testImage\"\r\n              const form = new FormData();\r\n              form.append(\"file\", props.originalImage);\r\n              const analyze_options = {\r\n                method: \"POST\",\r\n                body: form,\r\n              };\r\n              fetch(url, analyze_options)\r\n                .then((response) => {\r\n                  if (!response.ok) throw Error(response.statusText);\r\n                  return response.json();\r\n                })\r\n                .then((image => {\r\n                  props.changeTestImage(image)\r\n                }))\r\n                .catch((error) => console.log(error)); \r\n            }}\r\n          >\r\n            Test Sending/Retrieving Image from API\r\n        </Button>\r\n        <img\r\n          src={\"data:image/png;base64,\" + props.testImage}\r\n          className={classes.exampleImage}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DebugToolbar;\r\n",["97","98"],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\components\\DebugToolbar\\style.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\constants.js",[],["99","100"],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\screens\\MultiAnalysisScreen.js",["101","102","103","104"],"import React, { useContext, useState } from \"react\";\r\n\r\nimport { base_url } from \"../../../constants.js\";\r\n\r\nimport { Context } from \"../analysisContext\";\r\n\r\nimport MultiAnalysisView from \"../views/MultiAnalysisView\";\r\n\r\nconst MultiAnalysisScreen = (props) => {\r\n  const {\r\n    lowerMaskOne,\r\n    lowerMaskTwo,\r\n    upperMaskOne,\r\n    upperMaskTwo,\r\n    zipImgList,\r\n    setZipImgList,\r\n    isManualMask,\r\n    setIsManualMask,\r\n  } = useContext(Context);\r\n\r\n  const [imageWidth, setImageWidth] = useState(2.54);\r\n  const [manualWidth, setManualWidth] = useState(false);\r\n\r\n  const uploadZip = async (event) => {\r\n    let zipFile = event.target.files[0];\r\n    if (zipFile) {\r\n      let url = base_url + \"/zipMeasure\";\r\n      let form = new FormData();\r\n      form.append(\"file\", zipFile);\r\n      form.append(\"width\", imageWidth);\r\n      form.append(\"manual_width\", manualWidth);\r\n      form.append(\"lower_mask_one\", lowerMaskOne);\r\n      form.append(\"lower_mask_two\", lowerMaskTwo);\r\n      form.append(\"upper_mask_one\", upperMaskOne);\r\n      form.append(\"upper_mask_two\", upperMaskTwo);\r\n      form.append(\"manual_mask\", isManualMask);\r\n\r\n      //Then analyze\r\n      const analyze_options = {\r\n        method: \"POST\",\r\n        body: form,\r\n      };\r\n      fetch(url, analyze_options)\r\n        .then((response) => {\r\n          if (!response.ok) throw Error(response.statusText);\r\n          return response.json();\r\n        })\r\n        .then((imgList) => {\r\n          alert(\"Images analyzed\");\r\n          setZipImgList(imgList);\r\n        })\r\n        .catch((error) => {\r\n          if (error instanceof TypeError) {\r\n            alert(\"Too many images, make a smaller Zip file\");\r\n          } else {\r\n            console.log(error);\r\n            alert(\"Unknown error, let Alex know about this. Error:\", error);\r\n          }\r\n        });\r\n    } else {\r\n      alert(\"Please upload an zip file\");\r\n    }\r\n  };\r\n\r\n  const goToSingle = () => {\r\n    props.history.push(\"/single\");\r\n  };\r\n\r\n  const goToHome = () => {\r\n    props.history.push(\"/home\");\r\n  };\r\n\r\n  const reanalyzeImage = async (obj, i) => {\r\n    obj[\"id\"] = i;\r\n    props.history.push({\r\n      pathname: \"/single\",\r\n      state: { obj: obj },\r\n    });\r\n  };\r\n\r\n  const handleWidthChange = (event) => {\r\n    setImageWidth(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <MultiAnalysisView\r\n      uploadZip={uploadZip}\r\n      reanalyzeImage={reanalyzeImage}\r\n      goToHome={goToHome}\r\n      goToSingle={goToSingle}\r\n      zipImgList={zipImgList}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MultiAnalysisScreen;\r\n","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\analysisContext.js",["105","106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\screens\\SingleAnalysisScreen.js",["120","121","122","123","124","125","126","127","128","129","130"],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\views\\SingleAnalysisView\\index.js",["131"],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\views\\MultiAnalysisView\\index.js",["132","133","134","135","136","137","138","139"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Button, Checkbox, Tooltip, TextField } from \"@material-ui/core\";\r\n\r\nimport styles from \"./style.js\";\r\n\r\nimport MaskSelector from \"../../components/MaskSelector\";\r\n\r\nconst MultiAnalysisView = (props) => {\r\n  const [imageWidth, setImageWidth] = useState(2.54);\r\n  const [manualWidth, setManualWidth] = useState(false);\r\n\r\n  const handleWidthChange = (event) => {\r\n    setImageWidth(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div style={{ ...styles.main, ...styles.mainRaised }}>\r\n      <div style={styles.container}>\r\n        <div style={styles.row}>\r\n          <Button\r\n            style={styles.cropButton}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={goToHome}\r\n          >\r\n            Go to home page\r\n          </Button>\r\n          <Button\r\n            style={styles.cropButton}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={goToSingle}\r\n          >\r\n            Go to single-image measurement\r\n          </Button>\r\n        </div>\r\n        <div style={styles.column}>\r\n          <div style={styles.title}>\r\n            <h2>Automatic Wound Area Measurement</h2>\r\n            <h4>Multi-image measurement</h4>\r\n          </div>\r\n        </div>\r\n        <div style={styles.column}>\r\n          <div style={{ height: 20 }} />\r\n          <Tooltip\r\n            title=\"This is the length of the green line\"\r\n            placement=\"top-start\"\r\n          >\r\n            <TextField\r\n              id=\"standard-number\"\r\n              label=\"Enter reference width (cm)\"\r\n              defaultValue={imageWidth}\r\n              InputProps={{\r\n                onChange: handleWidthChange,\r\n              }}\r\n            />\r\n          </Tooltip>\r\n        </div>\r\n        <div style={styles.column}>\r\n          <MaskSelector />\r\n        </div>\r\n        <div style={styles.column}>\r\n          <Button\r\n            variant=\"contained\"\r\n            component=\"label\"\r\n            color=\"primary\"\r\n            style={styles.analyzeButton}\r\n          >\r\n            Upload and analyze ZIP file\r\n            <input type=\"file\" name=\"myImage\" hidden onChange={uploadDayZip} />\r\n          </Button>\r\n        </div>\r\n        <div style={styles.column}>\r\n          {props.zipImgList.map((obj, i) => (\r\n            <div key={i} id={\"zipImg\" + i}>\r\n              {obj[\"error\"] === false ? (\r\n                <div style={styles.row}>\r\n                  <img\r\n                    src={obj[\"drawn_image\"]}\r\n                    style={styles.colImage}\r\n                    alt=\"\"\r\n                    onClick={() => reanalyzeImage(obj, i)}\r\n                  />\r\n                  <div style={styles.column}>\r\n                    <h3>Image: {i}</h3>\r\n                    <h3>Areas</h3>\r\n                    {obj[\"areas\"].map((area) => (\r\n                      <h5>{area}cm^2</h5>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div style={styles.row}>\r\n                  <img\r\n                    src={obj[\"orig\"]}\r\n                    style={styles.colImage}\r\n                    alt=\"\"\r\n                    onClick={() => reanalyzeImage(obj, i)}\r\n                  />\r\n                  <p>Error: {obj[\"error_message\"]}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiAnalysisView;\r\n","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\views\\MultiAnalysisView\\style.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\views\\SingleAnalysisView\\style.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\components\\MaskSelector\\index.js",["140","141","142","143","144","145","146","147","148","149","150","151"],"import React, { useContext, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport styles from \"./style.js\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport maskAImg from \"./assets/maskAImg.JPG\";\r\nimport maskBImg from \"./assets/maskBImg.JPG\";\r\nimport maskCImg from \"./assets/maskCImg.JPG\";\r\nimport maskDImg from \"./assets/maskDImg.JPG\";\r\nimport maskEImg from \"./assets/maskEImg.JPG\";\r\n\r\nimport { maskConstants } from \"../../../../constants.js\";\r\n\r\nconst MaskSelector = (props) => {\r\n  const { setMask, isManualMask, setIsManualMask } = React.useContext(Context);\r\n\r\n  const placeholder = \"hue, sat, val\";\r\n\r\n  const modifyLowerSat = (val) => {\r\n    let newLowerMaskOne = [...lowerMaskOne];\r\n    let newLowerMaskTwo = [...lowerMaskTwo];\r\n    newLowerMaskOne[1] += val;\r\n    newLowerMaskTwo[1] += val;\r\n\r\n    if (newLowerMaskOne[1] > 255) {\r\n      newLowerMaskOne[1] = 255;\r\n    }\r\n    if (newLowerMaskTwo[1] > 255) {\r\n      newLowerMaskTwo[1] = 255;\r\n    }\r\n    if (\r\n      newLowerMaskOne[1] > upperMaskOne[1] ||\r\n      newLowerMaskTwo[1] > upperMaskTwo[1]\r\n    ) {\r\n      alert(\"Cannot increase lower sat above upper sat\");\r\n    } else {\r\n      setLowerMaskOne(newLowerMaskOne);\r\n      setLowerMaskTwo(newLowerMaskTwo);\r\n    }\r\n  };\r\n  const modifyUpperSat = (val) => {\r\n    let newUpperMaskOne = [...upperMaskOne];\r\n    let newUpperMaskTwo = [...upperMaskTwo];\r\n    newUpperMaskOne[1] += val;\r\n    newUpperMaskTwo[1] += val;\r\n\r\n    if (newUpperMaskOne[1] > 255) {\r\n      newUpperMaskOne[1] = 255;\r\n    }\r\n    if (newUpperMaskTwo[1] > 255) {\r\n      newUpperMaskTwo[1] = 255;\r\n    }\r\n    if (\r\n      newUpperMaskOne[1] < lowerMaskOne[1] ||\r\n      newUpperMaskTwo[1] < lowerMaskTwo[1]\r\n    ) {\r\n      alert(\"Cannot lower upper sat below lower sat\");\r\n    } else {\r\n      setUpperMaskOne(newUpperMaskOne);\r\n      setUpperMaskTwo(newUpperMaskTwo);\r\n    }\r\n  };\r\n\r\n  const modifyLowerVal = (val) => {\r\n    let newLowerMaskOne = [...lowerMaskOne];\r\n    let newLowerMaskTwo = [...lowerMaskTwo];\r\n    newLowerMaskOne[2] += val;\r\n    newLowerMaskTwo[2] += val;\r\n\r\n    if (newLowerMaskOne[2] > 255) {\r\n      newLowerMaskOne[2] = 255;\r\n    }\r\n    if (newLowerMaskTwo[2] > 255) {\r\n      newLowerMaskTwo[2] = 255;\r\n    }\r\n    if (\r\n      newLowerMaskOne[2] > upperMaskOne[2] ||\r\n      newLowerMaskTwo[2] > upperMaskTwo[2]\r\n    ) {\r\n      alert(\"Cannot increase lower val above upper val\");\r\n    } else {\r\n      setLowerMaskOne(newLowerMaskOne);\r\n      setLowerMaskTwo(newLowerMaskTwo);\r\n    }\r\n  };\r\n  const modifyUpperVal = (val) => {\r\n    let newUpperMaskOne = [...upperMaskOne];\r\n    let newUpperMaskTwo = [...upperMaskTwo];\r\n    newUpperMaskOne[2] += val;\r\n    newUpperMaskTwo[2] += val;\r\n\r\n    if (newUpperMaskOne[2] > 255) {\r\n      newUpperMaskOne[2] = 255;\r\n    }\r\n    if (newUpperMaskTwo[2] > 255) {\r\n      newUpperMaskTwo[2] = 255;\r\n    }\r\n    if (\r\n      newUpperMaskOne[2] < lowerMaskOne[2] ||\r\n      newUpperMaskTwo[2] < lowerMaskTwo[2]\r\n    ) {\r\n      alert(\"Cannot lower upper val below lower val\");\r\n    } else {\r\n      setUpperMaskOne(newUpperMaskOne);\r\n      setUpperMaskTwo(newUpperMaskTwo);\r\n    }\r\n  };\r\n\r\n  const modifyHueRange = (val) => {\r\n    let newLowerMaskTwo = [...lowerMaskTwo];\r\n    let newUpperMaskOne = [...upperMaskOne];\r\n\r\n    newLowerMaskTwo[0] -= val;\r\n    newUpperMaskOne[0] += val;\r\n\r\n    if (newLowerMaskTwo[0] < 0) {\r\n      newLowerMaskTwo[0] = 0;\r\n    }\r\n    if (newUpperMaskOne[0] > 180) {\r\n      newUpperMaskOne[0] = 180;\r\n    }\r\n\r\n    setLowerMaskTwo(newLowerMaskTwo);\r\n    setUpperMaskOne(newUpperMaskOne);\r\n  };\r\n\r\n  const handleLowerMaskOneChange = (event) => {\r\n    setLowerMaskOne(event.target.value);\r\n  };\r\n\r\n  const handleLowerMaskTwoChange = (event) => {\r\n    setLowerMaskTwo(event.target.value);\r\n  };\r\n\r\n  const handleUpperMaskOneChange = (event) => {\r\n    setUpperMaskOne(event.target.value);\r\n  };\r\n\r\n  const handleUpperMaskTwoChange = (event) => {\r\n    setUpperMaskTwo(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.column}>\r\n      <div style={{ height: 20 }} />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => setIsManualMask(!isManualMask)}\r\n      >\r\n        Change mask type\r\n      </Button>\r\n      {isManualMask ? (\r\n        <div>\r\n          <h4>Selecting mask manually</h4>\r\n          <div style={styles.row}>\r\n            <div style={styles.column}>\r\n              <div style={styles.row}>\r\n                <TextField\r\n                  label=\"HSV Lower Range 1\"\r\n                  style={styles.textField}\r\n                  value={lowerMaskOne}\r\n                  placeholder={placeholder}\r\n                  onChange={handleLowerMaskOneChange}\r\n                  margin=\"normal\"\r\n                />\r\n                <TextField\r\n                  label=\"HSV Lower Range 2\"\r\n                  style={styles.textField}\r\n                  value={lowerMaskTwo}\r\n                  placeholder={placeholder}\r\n                  onChange={handleLowerMaskTwoChange}\r\n                  margin=\"normal\"\r\n                />\r\n              </div>\r\n              <div style={styles.row}>\r\n                <TextField\r\n                  label=\"HSV Upper Range 1\"\r\n                  style={styles.textField}\r\n                  value={upperMaskOne}\r\n                  placeholder={placeholder}\r\n                  onChange={handleUpperMaskOneChange}\r\n                  margin=\"normal\"\r\n                />\r\n                <TextField\r\n                  label=\"HSV Upper Range 2\"\r\n                  style={styles.textField}\r\n                  value={upperMaskTwo}\r\n                  placeholder={placeholder}\r\n                  onChange={handleUpperMaskTwoChange}\r\n                  margin=\"normal\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div style={styles.column}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setMask(maskConstants[\"A\"])}\r\n              >\r\n                Select Lightest Mask\r\n              </Button>\r\n              Best for:\r\n              <img src={maskAImg} style={styles.exampleImage} alt=\"\" />\r\n            </div>\r\n            <div style={styles.column}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setMask(maskConstants[\"B\"])}\r\n              >\r\n                Select Light Mask\r\n              </Button>\r\n              Best for:\r\n              <img src={maskBImg} style={styles.exampleImage} alt=\"\" />\r\n            </div>\r\n            <div style={styles.column}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setMask(maskConstants[\"C\"])}\r\n              >\r\n                Select Standard Mask\r\n              </Button>\r\n              Best for:\r\n              <img src={maskCImg} style={styles.exampleImage} alt=\"\" />\r\n            </div>\r\n            <div style={styles.column}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setMask(maskConstants[\"D\"])}\r\n              >\r\n                Select Darker Mask\r\n              </Button>\r\n              Best for:\r\n              <img src={maskDImg} style={styles.exampleImage} alt=\"\" />\r\n            </div>\r\n            <div style={styles.column}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setMask(maskConstants[\"E\"])}\r\n              >\r\n                Select Darkest Mask\r\n              </Button>\r\n              Best for:\r\n              <img src={maskEImg} style={styles.exampleImage} alt=\"\" />\r\n            </div>\r\n          </div>\r\n          <div style={{ height: 10 }} />\r\n          <div style={styles.row}>\r\n            <div style={styles.column}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ backgroundColor: \"maroon\" }}\r\n                onClick={() => modifyLowerSat(5)}\r\n                style={styles.hsvButton}\r\n              >\r\n                Look for redder wounds (+sat)\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ backgroundColor: \"pink\" }}\r\n                onClick={() => modifyLowerSat(-5)}\r\n                style={styles.hsvButton}\r\n              >\r\n                Look for pinker wounds (-sat)\r\n              </Button>\r\n            </div>\r\n            <div style={styles.column}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ backgroundColor: \"#800200\" }}\r\n                onClick={() => modifyLowerVal(5)}\r\n                style={styles.hsvButton}\r\n              >\r\n                Look for brighter wounds (+val)\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ backgroundColor: \"black\" }}\r\n                onClick={() => modifyLowerVal(-5)}\r\n                style={styles.hsvButton}\r\n              >\r\n                Look for darker wounds (-val)\r\n              </Button>\r\n            </div>\r\n            <div style={styles.column}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ backgroundColor: \"green\" }}\r\n                onClick={() => modifyUpperVal(5)}\r\n                style={styles.hsvButton}\r\n              >\r\n                Include more skin (+upperVal)\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ backgroundColor: \"green\" }}\r\n                onClick={() => modifyUpperVal(-5)}\r\n                style={styles.hsvButton}\r\n              >\r\n                Include less skin (-upperVal)\r\n              </Button>\r\n            </div>\r\n            <div style={styles.column}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ backgroundColor: \"green\" }}\r\n                onClick={() => modifyHueRange(5)}\r\n                style={styles.hsvButton}\r\n              >\r\n                Include more wound colors (+hue range)\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ backgroundColor: \"green\" }}\r\n                onClick={() => modifyHueRange(-5)}\r\n                style={styles.hsvButton}\r\n              >\r\n                Reduce range of possible colors (-hue range)\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h4>Selecting mask automatically</h4>\r\n      )}\r\n      <div style={{ height: 20 }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaskSelector;\r\n","C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\components\\MaskSelector\\style.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\components\\ImageCropper\\imageCropper.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\analysis\\components\\ImageCropper\\imageCropperHelper.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\home\\screens\\HomeScreen.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\home\\views\\HomeView\\index.js",[],"C:\\Users\\runal\\Documents\\GitHub\\Wound-Analysis-Frontend\\src\\features\\home\\views\\HomeView\\style.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":17},{"ruleId":"156","severity":1,"message":"160","line":13,"column":9,"nodeType":"158","messageId":"159","endLine":13,"endColumn":20},{"ruleId":"152","replacedBy":"161"},{"ruleId":"154","replacedBy":"162"},{"ruleId":"152","replacedBy":"163"},{"ruleId":"154","replacedBy":"164"},{"ruleId":"156","severity":1,"message":"165","line":16,"column":5,"nodeType":"158","messageId":"159","endLine":16,"endColumn":20},{"ruleId":"156","severity":1,"message":"166","line":20,"column":23,"nodeType":"158","messageId":"159","endLine":20,"endColumn":37},{"ruleId":"156","severity":1,"message":"167","line":79,"column":9,"nodeType":"158","messageId":"159","endLine":79,"endColumn":26},{"ruleId":"168","severity":2,"message":"169","line":84,"column":6,"nodeType":"170","endLine":84,"endColumn":23},{"ruleId":"171","severity":2,"message":"172","line":13,"column":11,"nodeType":"158","messageId":"173","endLine":13,"endColumn":15},{"ruleId":"156","severity":1,"message":"174","line":17,"column":10,"nodeType":"158","messageId":"159","endLine":17,"endColumn":23},{"ruleId":"171","severity":2,"message":"175","line":23,"column":25,"nodeType":"158","messageId":"173","endLine":23,"endColumn":35},{"ruleId":"171","severity":2,"message":"176","line":27,"column":28,"nodeType":"158","messageId":"173","endLine":27,"endColumn":33},{"ruleId":"171","severity":2,"message":"176","line":28,"column":35,"nodeType":"158","messageId":"173","endLine":28,"endColumn":40},{"ruleId":"171","severity":2,"message":"177","line":33,"column":35,"nodeType":"158","messageId":"173","endLine":33,"endColumn":39},{"ruleId":"178","severity":1,"message":"179","line":45,"column":37,"nodeType":"180","messageId":"181","endLine":45,"endColumn":39},{"ruleId":"171","severity":2,"message":"182","line":48,"column":13,"nodeType":"158","messageId":"173","endLine":48,"endColumn":26},{"ruleId":"171","severity":2,"message":"183","line":50,"column":13,"nodeType":"158","messageId":"173","endLine":50,"endColumn":21},{"ruleId":"171","severity":2,"message":"184","line":51,"column":13,"nodeType":"158","messageId":"173","endLine":51,"endColumn":24},{"ruleId":"171","severity":2,"message":"175","line":58,"column":33,"nodeType":"158","messageId":"173","endLine":58,"endColumn":43},{"ruleId":"171","severity":2,"message":"175","line":60,"column":33,"nodeType":"158","messageId":"173","endLine":60,"endColumn":43},{"ruleId":"156","severity":1,"message":"185","line":67,"column":9,"nodeType":"158","messageId":"159","endLine":67,"endColumn":23},{"ruleId":"171","severity":2,"message":"186","line":79,"column":23,"nodeType":"158","messageId":"173","endLine":79,"endColumn":35},{"ruleId":"171","severity":2,"message":"187","line":80,"column":26,"nodeType":"158","messageId":"173","endLine":80,"endColumn":41},{"ruleId":"156","severity":1,"message":"188","line":1,"column":28,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"189","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":18},{"ruleId":"156","severity":1,"message":"190","line":10,"column":11,"nodeType":"158","messageId":"159","endLine":10,"endColumn":18},{"ruleId":"156","severity":1,"message":"191","line":10,"column":20,"nodeType":"158","messageId":"159","endLine":10,"endColumn":30},{"ruleId":"156","severity":1,"message":"192","line":10,"column":47,"nodeType":"158","messageId":"159","endLine":10,"endColumn":59},{"ruleId":"156","severity":1,"message":"165","line":10,"column":61,"nodeType":"158","messageId":"159","endLine":10,"endColumn":76},{"ruleId":"171","severity":2,"message":"193","line":19,"column":11,"nodeType":"158","messageId":"173","endLine":19,"endColumn":26},{"ruleId":"171","severity":2,"message":"193","line":21,"column":11,"nodeType":"158","messageId":"173","endLine":21,"endColumn":26},{"ruleId":"171","severity":2,"message":"194","line":23,"column":9,"nodeType":"158","messageId":"173","endLine":23,"endColumn":25},{"ruleId":"171","severity":2,"message":"195","line":24,"column":9,"nodeType":"158","messageId":"173","endLine":24,"endColumn":23},{"ruleId":"196","severity":1,"message":"197","line":28,"column":6,"nodeType":"198","endLine":28,"endColumn":8,"suggestions":"199"},{"ruleId":null,"fatal":true,"severity":2,"message":"200","line":110,"column":27},{"ruleId":"156","severity":1,"message":"201","line":3,"column":18,"nodeType":"158","messageId":"159","endLine":3,"endColumn":26},{"ruleId":"156","severity":1,"message":"202","line":11,"column":10,"nodeType":"158","messageId":"159","endLine":11,"endColumn":21},{"ruleId":"156","severity":1,"message":"166","line":11,"column":23,"nodeType":"158","messageId":"159","endLine":11,"endColumn":37},{"ruleId":"171","severity":2,"message":"203","line":25,"column":22,"nodeType":"158","messageId":"173","endLine":25,"endColumn":30},{"ruleId":"171","severity":2,"message":"204","line":33,"column":22,"nodeType":"158","messageId":"173","endLine":33,"endColumn":32},{"ruleId":"171","severity":2,"message":"205","line":71,"column":64,"nodeType":"158","messageId":"173","endLine":71,"endColumn":76},{"ruleId":"171","severity":2,"message":"206","line":83,"column":36,"nodeType":"158","messageId":"173","endLine":83,"endColumn":50},{"ruleId":"171","severity":2,"message":"206","line":99,"column":36,"nodeType":"158","messageId":"173","endLine":99,"endColumn":50},{"ruleId":"156","severity":1,"message":"207","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":27},{"ruleId":"156","severity":1,"message":"188","line":1,"column":29,"nodeType":"158","messageId":"159","endLine":1,"endColumn":37},{"ruleId":"171","severity":2,"message":"208","line":27,"column":24,"nodeType":"158","messageId":"173","endLine":27,"endColumn":31},{"ruleId":"156","severity":1,"message":"209","line":53,"column":9,"nodeType":"158","messageId":"159","endLine":53,"endColumn":23},{"ruleId":"210","severity":1,"message":"211","line":272,"column":17,"nodeType":"212","endLine":272,"endColumn":41},{"ruleId":"210","severity":1,"message":"211","line":281,"column":17,"nodeType":"212","endLine":281,"endColumn":41},{"ruleId":"210","severity":1,"message":"211","line":292,"column":17,"nodeType":"212","endLine":292,"endColumn":41},{"ruleId":"210","severity":1,"message":"211","line":301,"column":17,"nodeType":"212","endLine":301,"endColumn":41},{"ruleId":"210","severity":1,"message":"211","line":312,"column":17,"nodeType":"212","endLine":312,"endColumn":41},{"ruleId":"210","severity":1,"message":"211","line":321,"column":17,"nodeType":"212","endLine":321,"endColumn":41},{"ruleId":"210","severity":1,"message":"211","line":332,"column":17,"nodeType":"212","endLine":332,"endColumn":41},{"ruleId":"210","severity":1,"message":"211","line":341,"column":17,"nodeType":"212","endLine":341,"endColumn":41},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'placeholder' is assigned a value but never used.",["213"],["214"],["213"],["214"],"'setIsManualMask' is assigned a value but never used.","'setManualWidth' is assigned a value but never used.","'handleWidthChange' is assigned a value but never used.","react/jsx-no-undef","'MultiAnalysisView' is not defined.","JSXIdentifier","no-undef","'True' is not defined.","undef","'currentImages' is assigned a value but never used.","'imageWidth' is not defined.","'width' is not defined.","'auto' is not defined.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setEdgedImage' is not defined.","'setAreas' is not defined.","'setAnalyzed' is not defined.","'reanalyzeImage' is assigned a value but never used.","'isManualMask' is not defined.","'setIsManualMask' is not defined.","'useState' is defined but never used.","'base_url' is defined but never used.","'setMask' is assigned a value but never used.","'zipImgList' is assigned a value but never used.","'isManualMask' is assigned a value but never used.","'setCurrentImage' is not defined.","'setOriginalImage' is not defined.","'setJumpHeading' is not defined.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.location.state' and 'setZipImgList'. Either include them or remove the dependency array.","ArrayExpression",["215"],"Parsing error: JSX attributes must only be assigned a non-empty expression\n\n\u001b[0m \u001b[90m 108 | \u001b[39m              \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m style\u001b[33m=\u001b[39m{styles\u001b[33m.\u001b[39mrow}\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 109 | \u001b[39m                \u001b[33m<\u001b[39m\u001b[33mCheckbox\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 110 | \u001b[39m                  checked\u001b[33m=\u001b[39m{}\u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 111 | \u001b[39m                  onChange\u001b[33m=\u001b[39m{() \u001b[33m=>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 112 | \u001b[39m                    setMask((prevMask) \u001b[33m=>\u001b[39m ({ \u001b[33m...\u001b[39mprevMask\u001b[33m,\u001b[39m auto\u001b[33m:\u001b[39m \u001b[33mFalse\u001b[39m }))\u001b[0m\n\u001b[0m \u001b[90m 113 | \u001b[39m                  }\u001b[0m","'Checkbox' is defined but never used.","'manualWidth' is assigned a value but never used.","'goToHome' is not defined.","'goToSingle' is not defined.","'uploadDayZip' is not defined.","'reanalyzeImage' is not defined.","'useContext' is defined but never used.","'Context' is not defined.","'modifyUpperSat' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},"Update the dependencies array to be: [props.location.state, setZipImgList]",{"range":"218","text":"219"},[850,852],"[props.location.state, setZipImgList]"]